@model WebStoreMap.Models.ViewModels.Company.CompanyViewModel

@{
    ViewBag.Title = "Добавление компании";
}


<style>
    .backtoproducts-link:hover {
        color: #f44153;
    }
</style>

<!-- Section: Design Block -->
<section class="text-center">
    <!-- Background image -->
    <div class="card mx-4 mx-md-5 shadow-5-strong" style="margin-top: 60px; margin-bottom: 60px; margin-right: 3rem !important; margin-left: 3rem !important; background: hsla(0, 0%, 100%, 0.8); backdrop-filter: blur(30px); ">
        <div class="card-body py-5 px-md-5">
            <div class="row d-flex justify-content-center">
                <div class="col-lg-8">
                    <h4 class="fw-bold mb-5 addProductHeader">Добавление компании</h4>
                    @using (Html.BeginForm("AddCompany", "Company", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                    <form>
                        @if (TempData["SM"] != null)
                        {
                            <div class="alert alert-success">
                                @TempData["SM"]
                            </div>
                        }
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.FullCompanyName, new { htmlAttributes = new { @class = "form-control", Placeholder = "Полное наименование" } })</center>
                            <center>@Html.ValidationMessageFor(model => model.FullCompanyName, "", new { @class = "text-danger" })</center>
                        </div>
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", Placeholder = "Наименование" } })</center>
                            <center>@Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })</center>
                        </div>
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", Placeholder = "Описание" } })</center>
                            <center>@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })</center>
                        </div>
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.EmailAdress, new { htmlAttributes = new { @class = "form-control", Placeholder = "Почта" } })</center>
                            <center>@Html.ValidationMessageFor(model => model.EmailAdress, "", new { @class = "text-danger" })</center>
                        </div>
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", Placeholder = "Телефон" } })</center>
                            <center>@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })</center>
                        </div>
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.SlugVK, new { htmlAttributes = new { @class = "form-control", Placeholder = "Ссылка на ВК" } })</center>
                        </div>
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.SlugWhatsapp, new { htmlAttributes = new { @class = "form-control", Placeholder = "Ссылка на Whatsapp" } })</center>
                        </div>
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.SlugTelegram, new { htmlAttributes = new { @class = "form-control", Placeholder = "Ссылка на Telegram" } })</center>
                        </div>
                     
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.LegalAddress, new { htmlAttributes = new { @class = "form-control", Placeholder = "Юридический адрес" } })</center>
                            <center>@Html.ValidationMessageFor(model => model.LegalAddress, "", new { @class = "text-danger" })</center>
                        </div>
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.PostalAddress, new { htmlAttributes = new { @class = "form-control", Placeholder = "Потовый адрес" } })</center>
                            <center>@Html.ValidationMessageFor(model => model.PostalAddress, "", new { @class = "text-danger" })</center>
                        </div>
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.INN, new { htmlAttributes = new { @class = "form-control", Placeholder = "ИНН" } })</center>
                            <center>@Html.ValidationMessageFor(model => model.INN, "", new { @class = "text-danger" })</center>
                        </div>
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.OGRN, new { htmlAttributes = new { @class = "form-control", Placeholder = "ОГРН" } })</center>
                            <center>@Html.ValidationMessageFor(model => model.OGRN, "", new { @class = "text-danger" })</center>
                        </div>
                        <div class="form-outline mb-4">
                            <center>@Html.EditorFor(model => model.KPP, new { htmlAttributes = new { @class = "form-control", Placeholder = "КПП" } })</center>
                            <center>@Html.ValidationMessageFor(model => model.KPP, "", new { @class = "text-danger" })</center>
                        </div>
                        <div class="form-outline mb-4">
                            @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control", style = "display:none" } })
                            <center><label class="form-label" style="font-family: 'Montserrat', sans-serif; font-size:18px">Изображение услуги</label></center>
                            <div class="input-file-row" style="margin-top:10px">
                                <label class="input-file">
                                    <input type="file" name="file" id="imageUpload" />
                                    <span>Добавить изображение</span>
                                </label>
                                <div class="input-file-list"></div>
                                <img id="imgpreview" src="~/Content/img/no_image.png" alt="your image" style="width: 90px; height:auto" />
                            </div>
                        </div>
                        <div class="form-outline mb-4">
                            <center>
                                <input type="submit" value="Создать" class="btn btn-success btn-add" style="width:200px !important" />
                            </center>
                        </div>
                        <div class="form-outline mb-4">
                            <center>@Html.ActionLink("Назад к компаниям", "Companies", "Company", "", new { @class = "backtoproducts-link" })</center>
                        </div>
                    </form>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/MyScripts/AddCompanyScript.js"></script>
}
