@model WebStoreMap.Models.ViewModels.Company.CompanyViewModel
@{ViewBag.Title = "Редактирование компании";}

<style>
    .backtoproducts-link:hover {
        color: #f44153;
    }
</style>

<section class="text-center">
    <div class="card mx-4 mx-md-5 shadow-5-strong" style="margin-top: 60px; margin-bottom: 60px; margin-right: 3rem !important; margin-left: 3rem !important; background: hsla(0, 0%, 100%, 0.8); backdrop-filter: blur(30px); ">
        <div class="card-body py-5 px-md-5">
            <div class="row d-flex justify-content-center">
                <div class="col-lg-8">
                    <h2 class="fw-bold mb-5">Редактирование компании</h2>
                    @using (Html.BeginForm("EditCompany", "Company", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                <form>
                    @if (TempData["SM"] != null)
                    {
                        <div class="alert alert-success">
                            @TempData["SM"]
                        </div>
                    }
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.FullCompanyName, new { htmlAttributes = new { @class = "form-control" } })</center>
                        <center>@Html.ValidationMessageFor(model => model.FullCompanyName, "", new { @class = "text-danger" })</center>
                        <center><label class="form-label" for="form3Example3">Полное наименование</label></center>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })</center>
                        <center>@Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })</center>
                        <center><label class="form-label" for="form3Example3">Наименование</label></center>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })</center>
                        <center>@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })</center>
                        <center><label class="form-label" for="form3Example3">Описание</label></center>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.EmailAdress, new { htmlAttributes = new { @class = "form-control" } })</center>
                        <center>@Html.ValidationMessageFor(model => model.EmailAdress, "", new { @class = "text-danger" })</center>
                        <center><label class="form-label" for="form3Example3">Почта</label></center>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })</center>
                        <center>@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })</center>
                        <center><label class="form-label" for="form3Example3">Телефон</label></center>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.SlugVK, new { htmlAttributes = new { @class = "form-control"} })</center>
                        <center><label class="form-label" for="form3Example3">Ссылка на ВК</label></center>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.SlugWhatsapp, new { htmlAttributes = new { @class = "form-control"} })</center>
                        <center><label class="form-label" for="form3Example3">Ссылка на Whatsapp</label></center>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.SlugTelegram, new { htmlAttributes = new { @class = "form-control" } })</center>
                        <center><label class="form-label" for="form3Example3">Ссылка на Telegram</label></center>
                    </div>
                  
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.LegalAddress, new { htmlAttributes = new { @class = "form-control" } })</center>
                        <center>@Html.ValidationMessageFor(model => model.LegalAddress, "", new { @class = "text-danger" })</center>
                        <center><label class="form-label" for="form3Example3">Юридический адрес</label></center>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.PostalAddress, new { htmlAttributes = new { @class = "form-control" } })</center>
                        <center>@Html.ValidationMessageFor(model => model.PostalAddress, "", new { @class = "text-danger" })</center>
                        <center><label class="form-label" for="form3Example3">Почтовый адрес</label></center>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.INN, new { htmlAttributes = new { @class = "form-control" } })</center>
                        <center>@Html.ValidationMessageFor(model => model.INN, "", new { @class = "text-danger" })</center>
                        <center><label class="form-label" for="form3Example3">ИНН</label></center>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.OGRN, new { htmlAttributes = new { @class = "form-control" } })</center>
                        <center>@Html.ValidationMessageFor(model => model.OGRN, "", new { @class = "text-danger" })</center>
                        <center><label class="form-label" for="form3Example3">ОГРН</label></center>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.EditorFor(model => model.KPP, new { htmlAttributes = new { @class = "form-control" } })</center>
                        <center>@Html.ValidationMessageFor(model => model.KPP, "", new { @class = "text-danger" })</center>
                        <center><label class="form-label" for="form3Example3">КПП</label></center>
                    </div>
                    <div class="form-outline mb-4">
                        <center><label class="form-label" style="font-family: 'Montserrat', sans-serif;">Логотип компании</label></center>
                        @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control", style = "display:none" } })

                        <div class="input-file-row" style="margin-top:10px">
                            <label class="input-file">
                                <input type="file" name="file" id="imageUpload" />
                                <span>Добавить изображение</span>
                            </label>
                            <div class="input-file-list"></div>
                            @if (Model.ImageName != null)
                            {
                                <img src="/Images/Uploads/Companies/@Model.Id/@Model.ImageName" alt="..." style="width:300px; height:200px" id="imgpreview" />
                            }
                            else
                            {
                                <center><img id="imgpreview" src="~/Content/img/no_image.png" /></center>
                            }
                        </div>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.LabelFor(model => model.View, htmlAttributes: new { @class = "control-label col-md-2" })</center>
                        <center>@Html.CheckBoxFor(model => model.View, Model.View)</center>
                        <center>@Html.ValidationMessageFor(model => model.View)</center>
                    </div>

                    <div class="form-outline mb-4">
                        <center>
                            <input type="submit" value="Сохранить" class="btn-add" style="width:200px !important" />
                        </center>
                    </div>
                    <div class="form-outline mb-4">
                        <center>@Html.ActionLink("Назад к компаниям", "Companies", "Company", "", new { @class = "backtoproducts-link" })</center>
                    </div>
                </form>
                    }
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/MyScripts/AddCompanyScript.js"></script>
    <link href="~/Scripts/dropzone/basic.css" rel="stylesheet" />
    <link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />
    <script src="~/Scripts/dropzone/dropzone.js"></script>

    <script>
        /* Dropzone js*/
        Dropzone.options.dropzoneForm = {
            acceptedFiles: "image/*",
            init: function () {
                this.on("complete",
                    function (file) {
                        if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                            location.reload();
                        }
                    });
                this.on("sending",
                    function (file, xhr, formData) {
                        formData.append("id",  @Model.Id);
                    });
            }
        };
        /*-----------------------------------------------------------*/
        /* Delete gallery image */

        $("a.deleteimage").click(function(e) {
            e.preventDefault();

            if (!confirm("Подтвердить удаление")) return false;

            var $this = $(this);
            var url = "/admin/company/DeleteImage";
            var imageName = $this.data("name");


            $.post(url, { id: @Model.Id, imageName: imageName }, function(data) {
                $this.parent().parent().parent().fadeOut("slow");
            });
        });
        /*-----------------------------------------------------------*/
    </script>
}
